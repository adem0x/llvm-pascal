#labels Featured
=Basic steps=
([https://github.com/CRogers/LLVM-Windows-Binaries/blob/master/compiling.md This summary is based on CRogers' instructions])
==Prepare the Buid==
  # Install [http://www.microsoft.com/en-us/download/details.aspx?id=34673 Visual Studio 2012+];
  # Install [http://www.cmake.org CMake];
  # Install [https://www.python.org/ Python 2.7.x];
  # Download LLVM [http://llvm.org/releases/download.html sources];
  # Unzip into *`C:\LLVM-<version>.src`*.
==Configure the Build==
  # Run CMake GUI;
  # Set "source code" to *`C:\LLVM-<version>.src`*;
  # Set "binaries" to *`C:\LLVM-<version>.bin`*;
  # Set "Grouped" and "Advanced";
  # Configure;
  # Set Generator to *"Visual Studio 11 Win64"* (if for VS 2012);
  # Set "LLVM_TARGETS_TO_BUILD" to *`X86`* (if for X86 and X64_64 or leave *`all`*);
  # Configure (again);
  # Generate.
==Build==
  # Double-click *{{{C:\LLVM-<version>.bin\llvm.sln}}}*;
  # Change "Debug" to *`MinSizeRel`* or *`Release`*;
  # Right-click *`ALL-BUILD`* on Solution Explorer; 
  # Build;
  # Wait...;
  # The tools will be stored in *{{{C:\LLVM-<version>.bin\bin\<MinSizeRel or Release>}}}*;
  # The libs will be in *{{{C:\LLVM-<version>.bin\lib\<MinSizeRel or Release>}}}*;
==Generate the DLL==  
  # Go to "Start Menu | All Programs | Microsoft Visual Studio 2012 | Visual Studio Tools";
  # Type *
    `cd C:\LLVM-<version>.bin\lib\<MinSizeRel or Release>`*
  # Type *
    `lib /OUT:big.lib LLVM*.lib`*. This combines all the individual LLVM libs into one big one called big.lib;
  # Download the *[https://github.com/CRogers/LLVM-Windows-Binaries/blob/master/LibDefExtractor.exe LibDefExtractor.exe]* tool in this same folder;
  # Type *
    `LibDefExtractor big.lib LLVM-<version>.def`*. This extracts the non-C++ symbols to a DEF file called `LLVM-<version>.def`;
  # Download the *[https://github.com/CRogers/LLVM-Windows-Binaries/blob/master/EmptyDllMain.lib EmptyDllMain.lib]* library in this same folder;
  # Type *
    `link /DLL /DEF:LLVM-<version>.def /MACHINE:X64 /OUT:LLVM-<version>-X64.dll big.lib EmptyDllMain.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib`*
  # A DLL of ~10mb should be built, if it is very small something has gone wrong.   
  